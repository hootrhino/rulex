name: 2- Linux 构建测试

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.20.1
      - name: Linux 构建测试
        run: |
          sudo apt update -y
          sudo apt install jq cloc protobuf-compiler \
               gcc-mingw-w64-x86-64 \
               gcc-arm-linux-gnueabi \
               gcc-mips-linux-gnu \
               gcc-mingw-w64 \
               gcc-aarch64-linux-gnu -y
          cloc ./
          make
          # for test mqtt
          echo "Start Mqtt Server"
          docker run -d -p 1883:1883 -p 9001:9001 eclipse-mosquitto
          # for test tdengine
          echo "Start TdEngine"
          docker run -d --name tdengine --hostname="tdengine" -p 6030-6041:6030-6041 -p 6030-6041:6030-6041/udp tdengine/tdengine
          echo "Start MongoDB"
          docker run --rm -p 27017:27017 --name test-mongo -d -e MONGO_INITDB_ROOT_USERNAME=root -e MONGO_INITDB_ROOT_PASSWORD=root mongo
          # -------------------------------------------
          # | every test
          # -------------------------------------------
          go test -timeout 30s -run ^TestFullyRun$ github.com/hootrhino/rulex/test -v -count=1
          #
          go test -timeout 30s -run ^Test_data_to_tdengine$ github.com/hootrhino/rulex/test -v -count=1
          #
          go test -timeout 30s -run ^Test_DataToMongo$ github.com/hootrhino/rulex/test -v -count=1
          chmod +x ./release_pkg.sh
          bash ./release_pkg.sh
